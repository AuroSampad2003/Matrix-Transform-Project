{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Matrix-Transform-Project\\\\frontend\\\\src\\\\components\\\\MatrixTransform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rotateMatrix = (matrix, n) => {\n  let newMatrix = JSON.parse(JSON.stringify(matrix));\n\n  // **Rotate outer border**\n  let top = matrix[0].slice(0, n);\n  let right = matrix.map(row => row[n - 1]);\n  let bottom = matrix[n - 1].slice(0, n).reverse();\n  let left = matrix.map(row => row[0]).reverse();\n\n  // Assign rotated border\n  for (let i = 0; i < n; i++) {\n    newMatrix[0][i] = left[i];\n    newMatrix[i][n - 1] = top[i];\n    newMatrix[n - 1][i] = right[i];\n    newMatrix[i][0] = bottom[i];\n  }\n\n  // **Rotate red block**\n  let mid = Math.floor(n / 2);\n  [newMatrix[mid - 1][mid], newMatrix[mid][mid]] = [newMatrix[mid][mid], newMatrix[mid - 1][mid]];\n  [newMatrix[mid - 1][mid - 1], newMatrix[mid][mid - 1]] = [newMatrix[mid][mid - 1], newMatrix[mid - 1][mid - 1]];\n  return newMatrix;\n};\nconst MatrixTransform = () => {\n  _s();\n  const [size, setSize] = useState(6);\n  const [matrix, setMatrix] = useState(generateMatrix(6));\n  function generateMatrix(n) {\n    return Array.from({\n      length: n\n    }, (_, row) => Array.from({\n      length: n\n    }, (_, col) => row * n + col + 1));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select NxN Size: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: size,\n      onChange: e => {\n        const newSize = parseInt(e.target.value);\n        setSize(newSize);\n        setMatrix(generateMatrix(newSize));\n      },\n      children: [6, 8, 10, 12, 14, 16].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: n,\n        children: [n, \"x\", n]\n      }, n, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Input Matrix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatrixDisplay, {\n      matrix: matrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Output Matrix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatrixDisplay, {\n      matrix: rotateMatrix(matrix, size)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixTransform, \"ZDAC8jQ+9FMgJYwxD3a1anhKTuU=\");\n_c = MatrixTransform;\nconst MatrixDisplay = ({\n  matrix\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"matrix\",\n  style: {\n    gridTemplateColumns: `repeat(${matrix.length}, 40px)`\n  },\n  children: matrix.map((row, rowIndex) => row.map((num, colIndex) => {\n    // Determine the class based on position\n    let className = \"white\";\n    if (rowIndex === 0 || rowIndex === matrix.length - 1 || colIndex === 0 || colIndex === matrix.length - 1) {\n      className = \"green\"; // Outer border\n    } else if ((rowIndex === Math.floor(matrix.length / 2) - 1 || rowIndex === Math.floor(matrix.length / 2)) && (colIndex === Math.floor(matrix.length / 2) - 1 || colIndex === Math.floor(matrix.length / 2))) {\n      className = \"red\"; // Inner red block\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: num\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 5\n}, this);\n_c2 = MatrixDisplay;\nexport default MatrixTransform;\nvar _c, _c2;\n$RefreshReg$(_c, \"MatrixTransform\");\n$RefreshReg$(_c2, \"MatrixDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","rotateMatrix","matrix","n","newMatrix","JSON","parse","stringify","top","slice","right","map","row","bottom","reverse","left","i","mid","Math","floor","MatrixTransform","_s","size","setSize","setMatrix","generateMatrix","Array","from","length","_","col","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","newSize","parseInt","target","MatrixDisplay","_c","style","gridTemplateColumns","rowIndex","num","colIndex","_c2","$RefreshReg$"],"sources":["D:/Projects/Matrix-Transform-Project/frontend/src/components/MatrixTransform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst rotateMatrix = (matrix, n) => {\r\n  let newMatrix = JSON.parse(JSON.stringify(matrix));\r\n\r\n  // **Rotate outer border**\r\n  let top = matrix[0].slice(0, n);\r\n  let right = matrix.map(row => row[n - 1]);\r\n  let bottom = matrix[n - 1].slice(0, n).reverse();\r\n  let left = matrix.map(row => row[0]).reverse();\r\n\r\n  // Assign rotated border\r\n  for (let i = 0; i < n; i++) {\r\n    newMatrix[0][i] = left[i];\r\n    newMatrix[i][n - 1] = top[i];\r\n    newMatrix[n - 1][i] = right[i];\r\n    newMatrix[i][0] = bottom[i];\r\n  }\r\n\r\n  // **Rotate red block**\r\n  let mid = Math.floor(n / 2);\r\n  [newMatrix[mid - 1][mid], newMatrix[mid][mid]] =\r\n    [newMatrix[mid][mid], newMatrix[mid - 1][mid]];\r\n  [newMatrix[mid - 1][mid - 1], newMatrix[mid][mid - 1]] =\r\n    [newMatrix[mid][mid - 1], newMatrix[mid - 1][mid - 1]];\r\n\r\n  return newMatrix;\r\n};\r\n\r\nconst MatrixTransform = () => {\r\n  const [size, setSize] = useState(6);\r\n  const [matrix, setMatrix] = useState(generateMatrix(6));\r\n\r\n  function generateMatrix(n) {\r\n    return Array.from({ length: n }, (_, row) =>\r\n      Array.from({ length: n }, (_, col) => row * n + col + 1)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\">\r\n      <label>Select NxN Size: </label>\r\n      <select value={size} onChange={(e) => {\r\n        const newSize = parseInt(e.target.value);\r\n        setSize(newSize);\r\n        setMatrix(generateMatrix(newSize));\r\n      }}>\r\n        {[6, 8, 10, 12, 14, 16].map(n => (\r\n          <option key={n} value={n}>{n}x{n}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <h3>Input Matrix</h3>\r\n      <MatrixDisplay matrix={matrix} />\r\n\r\n      <h3>Output Matrix</h3>\r\n      <MatrixDisplay matrix={rotateMatrix(matrix, size)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MatrixDisplay = ({ matrix }) => (\r\n    <div\r\n      className=\"matrix\"\r\n      style={{\r\n        gridTemplateColumns: `repeat(${matrix.length}, 40px)`,\r\n      }}\r\n    >\r\n      {matrix.map((row, rowIndex) =>\r\n        row.map((num, colIndex) => {\r\n          // Determine the class based on position\r\n          let className = \"white\";\r\n  \r\n          if (\r\n            rowIndex === 0 ||\r\n            rowIndex === matrix.length - 1 ||\r\n            colIndex === 0 ||\r\n            colIndex === matrix.length - 1\r\n          ) {\r\n            className = \"green\"; // Outer border\r\n          } else if (\r\n            (rowIndex === Math.floor(matrix.length / 2) - 1 ||\r\n              rowIndex === Math.floor(matrix.length / 2)) &&\r\n            (colIndex === Math.floor(matrix.length / 2) - 1 ||\r\n              colIndex === Math.floor(matrix.length / 2))\r\n          ) {\r\n            className = \"red\"; // Inner red block\r\n          }\r\n  \r\n          return (\r\n            <div key={`${rowIndex}-${colIndex}`} className={className}>\r\n              {num}\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n  \r\nexport default MatrixTransform;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}