{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const rotateMatrix=(matrix,n)=>{let newMatrix=JSON.parse(JSON.stringify(matrix));// **Rotate outer border**\nlet top=matrix[0].slice(0,n);let right=matrix.map(row=>row[n-1]);let bottom=matrix[n-1].slice(0,n).reverse();let left=matrix.map(row=>row[0]).reverse();// Assign rotated border\nfor(let i=0;i<n;i++){newMatrix[0][i]=left[i];newMatrix[i][n-1]=top[i];newMatrix[n-1][i]=right[i];newMatrix[i][0]=bottom[i];}// **Rotate red block**\nlet mid=Math.floor(n/2);[newMatrix[mid-1][mid],newMatrix[mid][mid]]=[newMatrix[mid][mid],newMatrix[mid-1][mid]];[newMatrix[mid-1][mid-1],newMatrix[mid][mid-1]]=[newMatrix[mid][mid-1],newMatrix[mid-1][mid-1]];return newMatrix;};const MatrixTransform=()=>{const[size,setSize]=useState(6);const[matrix,setMatrix]=useState(generateMatrix(6));function generateMatrix(n){return Array.from({length:n},(_,row)=>Array.from({length:n},(_,col)=>row*n+col+1));}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 text-center\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select NxN Size: \"}),/*#__PURE__*/_jsx(\"select\",{value:size,onChange:e=>{const newSize=parseInt(e.target.value);setSize(newSize);setMatrix(generateMatrix(newSize));},children:[6,8,10,12,14,16].map(n=>/*#__PURE__*/_jsxs(\"option\",{value:n,children:[n,\"x\",n]},n))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Input Matrix\"}),/*#__PURE__*/_jsx(MatrixDisplay,{matrix:matrix}),/*#__PURE__*/_jsx(\"h3\",{children:\"Output Matrix\"}),/*#__PURE__*/_jsx(MatrixDisplay,{matrix:rotateMatrix(matrix,size)})]});};const MatrixDisplay=_ref=>{let{matrix}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"matrix\",style:{gridTemplateColumns:`repeat(${matrix.length}, 40px)`},children:matrix.map((row,rowIndex)=>row.map((num,colIndex)=>{// Determine the class based on position\nlet className=\"white\";if(rowIndex===0||rowIndex===matrix.length-1||colIndex===0||colIndex===matrix.length-1){className=\"green\";// Outer border\n}else if((rowIndex===Math.floor(matrix.length/2)-1||rowIndex===Math.floor(matrix.length/2))&&(colIndex===Math.floor(matrix.length/2)-1||colIndex===Math.floor(matrix.length/2))){className=\"red\";// Inner red block\n}return/*#__PURE__*/_jsx(\"div\",{className:className,children:num},`${rowIndex}-${colIndex}`);}))});};export default MatrixTransform;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","rotateMatrix","matrix","n","newMatrix","JSON","parse","stringify","top","slice","right","map","row","bottom","reverse","left","i","mid","Math","floor","MatrixTransform","size","setSize","setMatrix","generateMatrix","Array","from","length","_","col","className","children","value","onChange","e","newSize","parseInt","target","MatrixDisplay","_ref","style","gridTemplateColumns","rowIndex","num","colIndex"],"sources":["D:/Projects/Matrix-Transform-Project/frontend/src/components/MatrixTransform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst rotateMatrix = (matrix, n) => {\r\n  let newMatrix = JSON.parse(JSON.stringify(matrix));\r\n\r\n  // **Rotate outer border**\r\n  let top = matrix[0].slice(0, n);\r\n  let right = matrix.map(row => row[n - 1]);\r\n  let bottom = matrix[n - 1].slice(0, n).reverse();\r\n  let left = matrix.map(row => row[0]).reverse();\r\n\r\n  // Assign rotated border\r\n  for (let i = 0; i < n; i++) {\r\n    newMatrix[0][i] = left[i];\r\n    newMatrix[i][n - 1] = top[i];\r\n    newMatrix[n - 1][i] = right[i];\r\n    newMatrix[i][0] = bottom[i];\r\n  }\r\n\r\n  // **Rotate red block**\r\n  let mid = Math.floor(n / 2);\r\n  [newMatrix[mid - 1][mid], newMatrix[mid][mid]] =\r\n    [newMatrix[mid][mid], newMatrix[mid - 1][mid]];\r\n  [newMatrix[mid - 1][mid - 1], newMatrix[mid][mid - 1]] =\r\n    [newMatrix[mid][mid - 1], newMatrix[mid - 1][mid - 1]];\r\n\r\n  return newMatrix;\r\n};\r\n\r\nconst MatrixTransform = () => {\r\n  const [size, setSize] = useState(6);\r\n  const [matrix, setMatrix] = useState(generateMatrix(6));\r\n\r\n  function generateMatrix(n) {\r\n    return Array.from({ length: n }, (_, row) =>\r\n      Array.from({ length: n }, (_, col) => row * n + col + 1)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\">\r\n      <label>Select NxN Size: </label>\r\n      <select value={size} onChange={(e) => {\r\n        const newSize = parseInt(e.target.value);\r\n        setSize(newSize);\r\n        setMatrix(generateMatrix(newSize));\r\n      }}>\r\n        {[6, 8, 10, 12, 14, 16].map(n => (\r\n          <option key={n} value={n}>{n}x{n}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <h3>Input Matrix</h3>\r\n      <MatrixDisplay matrix={matrix} />\r\n\r\n      <h3>Output Matrix</h3>\r\n      <MatrixDisplay matrix={rotateMatrix(matrix, size)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MatrixDisplay = ({ matrix }) => (\r\n    <div\r\n      className=\"matrix\"\r\n      style={{\r\n        gridTemplateColumns: `repeat(${matrix.length}, 40px)`,\r\n      }}\r\n    >\r\n      {matrix.map((row, rowIndex) =>\r\n        row.map((num, colIndex) => {\r\n          // Determine the class based on position\r\n          let className = \"white\";\r\n  \r\n          if (\r\n            rowIndex === 0 ||\r\n            rowIndex === matrix.length - 1 ||\r\n            colIndex === 0 ||\r\n            colIndex === matrix.length - 1\r\n          ) {\r\n            className = \"green\"; // Outer border\r\n          } else if (\r\n            (rowIndex === Math.floor(matrix.length / 2) - 1 ||\r\n              rowIndex === Math.floor(matrix.length / 2)) &&\r\n            (colIndex === Math.floor(matrix.length / 2) - 1 ||\r\n              colIndex === Math.floor(matrix.length / 2))\r\n          ) {\r\n            className = \"red\"; // Inner red block\r\n          }\r\n  \r\n          return (\r\n            <div key={`${rowIndex}-${colIndex}`} className={className}>\r\n              {num}\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n  \r\nexport default MatrixTransform;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}